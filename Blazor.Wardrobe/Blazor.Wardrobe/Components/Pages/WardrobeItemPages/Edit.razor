@page "/items/edit/{id}"
@using Blazor.Wardrobe.Services
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager _navigationManager
@rendermode InteractiveServer


<h3>Edit</h3>

@if (loading)
{
    <p><em>Loading...</em></p>
}
else
{
<EditForm Model="item" OnValidSubmit="HandleSubmit">
    <div class="d-flex flex-column">
        <label>
            Image URL:
            <InputText @bind-Value="item.ImageUrl" placeholder="Image Urls" />
        </label>
        <label>
            Name:
            <InputText @bind-Value="item.Name" placeholder="Name" />
        </label>
        <label>
            Brand:
            <InputText @bind-Value="item.Brand" placeholder="Brand" />
        </label>
        <label>
            Category:
            <InputText @bind-Value="item.Category" placeholder="Category" />
        </label>
        <label>
            Description:
            <InputText @bind-Value="item.Description" placeholder="Description" />
        </label>
    </div>
    <ValidationSummary />
    <button type="submit">Update</button>
</EditForm>
}

@code {
    private Blazor.Wardrobe.Models.WardrobeItem? item = new();
    private bool loading = false;
    private bool isSuccess;
    [Inject] WardrobeItemService _service { get; set; }
    [Parameter]
    public string Id { get; set; }


    protected async override Task OnInitializedAsync()
    {
        if (int.TryParse(Id, out int IdInt))
        {
            item = await _service.GetByIdAsync(IdInt);
            loading = false;
        }
        else
        {
            _navigationManager.NavigateTo("/items");
        }
    }

    private async Task HandleSubmit()
    {
        loading = true;
        isSuccess = await _service.UpdateAsync(item);
        loading = false;

        if (isSuccess)
        {
            _navigationManager.NavigateTo("/items");
        }
    }
}
